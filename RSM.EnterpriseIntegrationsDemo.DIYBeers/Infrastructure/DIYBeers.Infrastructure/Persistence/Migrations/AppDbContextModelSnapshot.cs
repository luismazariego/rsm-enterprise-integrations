// <auto-generated />
using System;
using DIYBeers.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DIYBeers.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DIYBeers.Domain.Entities.Beer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Abv")
                        .HasColumnType("float");

                    b.Property<double>("AttenuationLevel")
                        .HasColumnType("float");

                    b.Property<string>("BrewersTips")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<double>("Ebc")
                        .HasColumnType("float");

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<string>("FirstBrewed")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FoodPairing")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<double>("Ibu")
                        .HasColumnType("float");

                    b.Property<Guid>("IngredientsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Ph")
                        .HasColumnType("float");

                    b.Property<double>("Srm")
                        .HasColumnType("float");

                    b.Property<string>("Tagline")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("TargetFg")
                        .HasColumnType("float");

                    b.Property<double>("TargetOg")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Beer", (string)null);
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Hops", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IngredientsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IngredientsId");

                    b.ToTable("Hops");
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Ingredients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Yeast")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BeerId")
                        .IsUnique();

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Malt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IngredientsId");

                    b.ToTable("Malt", (string)null);
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Hops", b =>
                {
                    b.HasOne("DIYBeers.Domain.Entities.Ingredients", null)
                        .WithMany("Hops")
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Ingredients", b =>
                {
                    b.HasOne("DIYBeers.Domain.Entities.Beer", "Beer")
                        .WithOne("Ingredients")
                        .HasForeignKey("DIYBeers.Domain.Entities.Ingredients", "BeerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Beer");
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Malt", b =>
                {
                    b.HasOne("DIYBeers.Domain.Entities.Ingredients", null)
                        .WithMany("Malt")
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Beer", b =>
                {
                    b.Navigation("Ingredients")
                        .IsRequired();
                });

            modelBuilder.Entity("DIYBeers.Domain.Entities.Ingredients", b =>
                {
                    b.Navigation("Hops");

                    b.Navigation("Malt");
                });
#pragma warning restore 612, 618
        }
    }
}
